function filterOutliers(t){var a=t.concat();a.sort(function(t,a){return t-a});var e=a[Math.floor(a.length/4)],r=a[Math.ceil(.75*a.length)],s=r-e,n=r+1.5*s,i=e-1.5*s;return a.filter(function(t){return t<n&&t>i})}function avg(t){return t.reduce((t,a)=>t+a,0)/t.length}function avg2(t){return avg(filterOutliers(t))}function min(t){return t.reduce((t,a)=>Math.min(t,a),1/0)}function max(t){return t.reduce((t,a)=>Math.max(t,a),0)}class Chart{constructor(t={}){this._scaleLength=t.scaleLength||150}_pad(t,a=" ",e){return e=e||this._markLength,e=Math.round(e),(t+Array.apply(null,Array(e)).map(()=>a).join("")).slice(0,e)}_drawScale(){const t=this._markLabelLength;let a=this._pad(""," ",t);for(let t=0;t<this._scaleLength;t+=this._markLength)a+=this._pad((t*this._msPerDot).toFixed());return a+this._totalMs.toFixed()}_drawLine(t){const a=this._markLabelLength,e=Math.max(t.duration*this._dotsPerMs,1);return this._pad(t.name," ",a)+this._pad(""," ",t.startTime*this._dotsPerMs)+this._pad("","â–ˆ",e)}draw(t){this._totalMs=t.reduce((t,a)=>Math.max(t,a.startTime+a.duration),0),this._msPerDot=this._totalMs/this._scaleLength,this._dotsPerMs=1/this._msPerDot,this._markLength=this._totalMs.toFixed().toString().length+1,this._markLabelLength=t.reduce((t,a)=>Math.max(t,a.name.length),0)+1;const a=this._drawScale(),e=t.map(t=>this._drawLine(t)).join("\n");console.log(`${a}\n${e}`)}}const TIMELINE=[{name:"networking",start:"navigationStart",end:"responseEnd"},{name:"dom parsing and scripts",start:"domLoading",end:"domInteractive"},{name:"dom interactive",start:"domInteractive",end:"domInteractive"},{name:"dom complete",start:"domComplete",end:"domComplete"},{name:"resources and scripts",start:"domInteractive",end:"loadEventEnd"}],TIMELINE_KEYS=TIMELINE.reduce((t,a)=>{const e=[];return-1===t.indexOf(a.start)&&e.push(a.start),-1===t.indexOf(a.end)&&e.push(a.end),t.concat(e)},[]);class Benchmark{constructor(t){this._benchmarkName=t,this._chart=new Chart,this._marks=new Map,this.avg=avg,this.min=min,this.max=max,this.avg2=avg2}markOnce(t){this._marks.has(t)||(performance.mark(t),this._marks.set(t,!0))}mark(t){performance.mark(t)}clear(t){t=t||this._benchmarkName;const a=this._data;delete a[t],this._data=a}clearAll(){this._data={}}compare(){const t=this._data;return["min","avg","avg2","max"].reduce((a,e,r)=>{const s=this[e],n=[];for(let a in t){const t=this._combineStats(a,s),e=t.timingsByKeys.navigationStart.length,r={implementation:`${a} (${e} samples)`};Object.keys(t.marksByKeys).forEach(a=>{r[a]=Math.round(s(t.marksByKeys[a]))}),n.push(r)}return console.log(`${r}. ${e.toUpperCase()}`),console.table(n),a[e]=n,a},{})}fullReport(t){t=t||this._benchmarkName,["min","avg","max"].forEach(t=>{this.report(this[t])})}report(t=avg){this.reportByName(this._benchmarkName,t)}reportByName(t,a=avg){const e=this._data[t].length;console.log(`Stats for ${t}, ${e} samples, function ${a.name}`),console.table(this._buildStats(t,a),["name","startTime","duration"]),this.chart(t,a)}chart(t,a=avg){t=t||this._benchmarkName,this._chart.draw(this._buildStats(t,a))}_buildStats(t,a){const e=this._combineStats(t,a);return e.periods.concat(e.marks).sort((t,a)=>t.startTime-a.startTime)}_combineStats(t,a=avg){t=t||this._benchmarkName;const e=this._data[t],r=TIMELINE_KEYS.reduce((t,a)=>(t[a]=e.map(t=>t.timings[a]),t),{}),s={};e.forEach(t=>{const a=t.marks;for(let t in a)s[t]=s[t]||[],s[t].push(a[t].startTime)});const n=TIMELINE.map(t=>({name:t.name,entryType:"measure",startTime:a(r[t.start]),duration:a(r[t.end].map((a,e)=>a-r[t.start][e]))})),i=Object.keys(s).map(t=>({name:t,entryType:"mark",startTime:a(s[t]),duration:0}));return{marksByKeys:s,timingsByKeys:r,periods:n,marks:i}}_getSamples(){const t=performance.timing.toJSON(),a=t.navigationStart;Object.keys(t).forEach(e=>{t[e]=Math.max(t[e]-a,0)});const e=performance.getEntriesByType("mark").reduce((t,a)=>{const e=a.toJSON();return t[e.name]=e,t},{});return{ts:Date.now(),timings:t,marks:e}}get _data(){try{return JSON.parse(window.localStorage.getItem("benchmark"))||{}}catch(t){return{}}}set _data(t){window.localStorage.setItem("benchmark",JSON.stringify(t))}save(){const t=this._data;t[this._benchmarkName]=t[this._benchmarkName]||[],t[this._benchmarkName].push(this._getSamples()),this._data=t}saveAndReload(){this.save();let t=+location.hash.slice(1);isNaN(t)||--t<=0||setTimeout(()=>{const a=new URL(location.href);a.hash=t,location.replace(a.toString()),location.reload()},600)}}
module.exports = Benchmark;